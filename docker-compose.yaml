services:
  cockroachdb:
    image: cockroachdb/cockroach:v25.3.1
    container_name: cockroachdb
    restart: always
    ports:
      - "${DB_PORT:-26257}:26257"       
      - "8081:8080"              
    volumes:
      - cockroach-data:/cockroach/cockroach-data
    command: start-single-node --insecure
    networks:
      - stockvision-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        API_PORT: ${API_PORT:-8080}   
        LOG_LEVEL: INFO
        LOG_DB: false             
    container_name: stockvision-api
    restart: on-failure:3
    ports:
      - "${API_PORT:-8080}:${API_PORT:-8080}"
    env_file:
      - api/.env
    depends_on:
      - cockroachdb
      - redis
    networks:
      - stockvision-network
    volumes:
      - ./logs:/app/logs

  app:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: stockvision-app
    ports:
      - "5173:80"
    env_file:
      - client/.env
    depends_on:
      - api
    restart: on-failure:3
    networks:
      - stockvision-network

  redis:
    image: redis:7.2-alpine
    container_name: stockvision-redis
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
    ports:
      - "6379:6379"
    networks:
      - stockvision-network
    volumes:
      - redis-data:/data

networks:
  stockvision-network:
    driver: bridge

volumes:
  cockroach-data:
  redis-data: